// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/env0/terraform-provider-env0/client/http (interfaces: HttpClientInterface)
//
// Generated by this command:
//
//	mockgen -destination=client_mock.go -package=http . HttpClientInterface
//

// Package http is a generated GoMock package.
package http

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockHttpClientInterface is a mock of HttpClientInterface interface.
type MockHttpClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHttpClientInterfaceMockRecorder
	isgomock struct{}
}

// MockHttpClientInterfaceMockRecorder is the mock recorder for MockHttpClientInterface.
type MockHttpClientInterfaceMockRecorder struct {
	mock *MockHttpClientInterface
}

// NewMockHttpClientInterface creates a new mock instance.
func NewMockHttpClientInterface(ctrl *gomock.Controller) *MockHttpClientInterface {
	mock := &MockHttpClientInterface{ctrl: ctrl}
	mock.recorder = &MockHttpClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpClientInterface) EXPECT() *MockHttpClientInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockHttpClientInterface) Delete(path string, params map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", path, params)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockHttpClientInterfaceMockRecorder) Delete(path, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockHttpClientInterface)(nil).Delete), path, params)
}

// Get mocks base method.
func (m *MockHttpClientInterface) Get(path string, params map[string]string, response any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", path, params, response)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockHttpClientInterfaceMockRecorder) Get(path, params, response any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockHttpClientInterface)(nil).Get), path, params, response)
}

// Patch mocks base method.
func (m *MockHttpClientInterface) Patch(path string, request, response any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Patch", path, request, response)
	ret0, _ := ret[0].(error)
	return ret0
}

// Patch indicates an expected call of Patch.
func (mr *MockHttpClientInterfaceMockRecorder) Patch(path, request, response any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Patch", reflect.TypeOf((*MockHttpClientInterface)(nil).Patch), path, request, response)
}

// Post mocks base method.
func (m *MockHttpClientInterface) Post(path string, request, response any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Post", path, request, response)
	ret0, _ := ret[0].(error)
	return ret0
}

// Post indicates an expected call of Post.
func (mr *MockHttpClientInterfaceMockRecorder) Post(path, request, response any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Post", reflect.TypeOf((*MockHttpClientInterface)(nil).Post), path, request, response)
}

// Put mocks base method.
func (m *MockHttpClientInterface) Put(path string, request, response any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", path, request, response)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockHttpClientInterfaceMockRecorder) Put(path, request, response any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockHttpClientInterface)(nil).Put), path, request, response)
}
